{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../src/database/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\r\nimport { AFUnwrappedDataSnapshot } from '../interfaces';\r\nimport { FirebaseListObservable } from './firebase_list_observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { observeOn } from 'rxjs/operator/observeOn';\r\nimport { observeQuery } from './query_observable';\r\nimport { Query, FirebaseListFactoryOpts } from '../interfaces';\r\nimport * as utils from '../utils';\r\nimport { mergeMap } from 'rxjs/operator/mergeMap';\r\nimport { map } from 'rxjs/operator/map';\r\n\r\nexport function FirebaseListFactory (\r\n  absoluteUrlOrDbRef:string |\r\n  firebase.database.Reference |\r\n  firebase.database.Query,\r\n  {preserveSnapshot, query = {}}:FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\r\n\r\n  let ref: firebase.database.Reference | firebase.database.Query;\r\n\r\n  utils.checkForUrlOrFirebaseRef(absoluteUrlOrDbRef, {\r\n    isUrl: () => ref = firebase.database().refFromURL(<string>absoluteUrlOrDbRef),\r\n    isRef: () => ref = <firebase.database.Reference>absoluteUrlOrDbRef,\r\n    isQuery: () => ref = <firebase.database.Query>absoluteUrlOrDbRef,\r\n  });\r\n\r\n  // if it's just a reference or string, create a regular list observable\r\n  if ((utils.isFirebaseRef(absoluteUrlOrDbRef) ||\r\n       utils.isString(absoluteUrlOrDbRef)) &&\r\n       utils.isEmptyObject(query)) {\r\n    return firebaseListObservable(ref, { preserveSnapshot });\r\n  }\r\n\r\n  const queryObs = observeQuery(query);\r\n  return new FirebaseListObservable(ref, subscriber => {\r\n    let sub = mergeMap.call(map.call(queryObs, query => {\r\n      let queried: firebase.database.Query = ref;\r\n      // Only apply the populated keys\r\n      // apply ordering and available querying options\r\n      // eg: ref.orderByChild('height').startAt(3)\r\n      // Check orderBy\r\n      if (query.orderByChild) {\r\n        queried = queried.orderByChild(query.orderByChild);\r\n      } else if (query.orderByKey) {\r\n        queried = queried.orderByKey();\r\n      } else if (query.orderByPriority) {\r\n        queried = queried.orderByPriority();\r\n      } else if (query.orderByValue) {\r\n        queried = queried.orderByValue();\r\n      }\r\n\r\n      // check equalTo\r\n      if (utils.hasKey(query, \"equalTo\")) {\r\n        queried = queried.equalTo(query.equalTo);\r\n\r\n        if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\r\n          throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\r\n        }\r\n\r\n        // apply limitTos\r\n        if (!utils.isNil(query.limitToFirst)) {\r\n          queried = queried.limitToFirst(query.limitToFirst);\r\n        }\r\n\r\n        if (!utils.isNil(query.limitToLast)) {\r\n          queried = queried.limitToLast(query.limitToLast);\r\n        }\r\n\r\n        return queried;\r\n      }\r\n\r\n      // check startAt\r\n      if (utils.hasKey(query, \"startAt\")) {\r\n        if (utils.hasKey(query.startAt, \"value\")) {\r\n          queried = queried.startAt(query.startAt.value, query.startAt.key);\r\n        } else {\r\n          queried = queried.startAt(query.startAt);\r\n        }\r\n      }\r\n\r\n      if (utils.hasKey(query, \"endAt\")) {\r\n          queried = queried.endAt(query.endAt);\r\n      }\r\n\r\n      if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\r\n        throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\r\n      }\r\n\r\n      // apply limitTos\r\n      if (!utils.isNil(query.limitToFirst)) {\r\n          queried = queried.limitToFirst(query.limitToFirst);\r\n      }\r\n\r\n      if (!utils.isNil(query.limitToLast)) {\r\n          queried = queried.limitToLast(query.limitToLast);\r\n      }\r\n\r\n      return queried;\r\n    }), (queryRef: firebase.database.Reference, ix: number) => {\r\n      return firebaseListObservable(queryRef, { preserveSnapshot });\r\n    })\r\n    .subscribe(subscriber);\r\n\r\n    return () => sub.unsubscribe();\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a FirebaseListObservable from a reference or query. Options can be provided as a second parameter.\r\n * This function understands the nuances of the Firebase SDK event ordering and other quirks. This function\r\n * takes into account that not all .on() callbacks are guaranteed to be asynchonous. It creates a initial array\r\n * from a promise of ref.once('value'), and then starts listening to child events. When the initial array\r\n * is loaded, the observable starts emitting values.\r\n */\r\nfunction firebaseListObservable(ref: firebase.database.Reference | firebase.database.Query, {preserveSnapshot}: FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\r\n\r\n  const toValue = preserveSnapshot ? (snapshot => snapshot) : utils.unwrapMapFn;\r\n  const toKey = preserveSnapshot ? (value => value.key) : (value => value.$key);\r\n\r\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any[]>) => {\r\n\r\n    // Keep track of callback handles for calling ref.off(event, handle)\r\n    const handles = [];\r\n    let hasLoaded = false;\r\n    let lastLoadedKey: string = null;\r\n    let array = [];\r\n\r\n    // The list children are always added to, removed from and changed within\r\n    // the array using the child_added/removed/changed events. The value event\r\n    // is only used to determine when the initial load is complete.\r\n\r\n    ref.once('value', (snap: any) => {\r\n      if (snap.exists()) {\r\n        snap.forEach((child: any) => {\r\n          lastLoadedKey = child.key;\r\n        });\r\n        if (array.find((child: any) => toKey(child) === lastLoadedKey)) {\r\n          hasLoaded = true;\r\n          obs.next(array);\r\n        }\r\n      } else {\r\n        hasLoaded = true;\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n\r\n    const addFn = ref.on('child_added', (child: any, prevKey: string) => {\r\n      array = onChildAdded(array, toValue(child), toKey, prevKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      } else if (child.key === lastLoadedKey) {\r\n        hasLoaded = true;\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_added', handle: addFn });\r\n\r\n    let remFn = ref.on('child_removed', (child: any) => {\r\n      array = onChildRemoved(array, toValue(child), toKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_removed', handle: remFn });\r\n\r\n    let chgFn = ref.on('child_changed', (child: any, prevKey: string) => {\r\n      array = onChildChanged(array, toValue(child), toKey, prevKey);\r\n      if (hasLoaded) {\r\n        obs.next(array);\r\n      }\r\n    }, err => {\r\n      if (err) { obs.error(err); obs.complete(); }\r\n    });\r\n    handles.push({ event: 'child_changed', handle: chgFn });\r\n\r\n    return () => {\r\n      // Loop through callback handles and dispose of each event with handle\r\n      // The Firebase SDK requires the reference, event name, and callback to\r\n      // properly unsubscribe, otherwise it can affect other subscriptions.\r\n      handles.forEach(item => {\r\n        ref.off(item.event, item.handle);\r\n      });\r\n    };\r\n\r\n  });\r\n\r\n  // TODO: should be in the subscription zone instead\r\n  return observeOn.call(listObs, new utils.ZoneScheduler(Zone.current));\r\n}\r\n\r\nexport function onChildAdded(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  if (!arr.length) {\r\n    return [child];\r\n  }\r\n  return arr.reduce((accumulator:firebase.database.DataSnapshot[], curr:firebase.database.DataSnapshot, i:number) => {\r\n    if (!prevKey && i===0) {\r\n      accumulator.push(child);\r\n    }\r\n    accumulator.push(curr);\r\n    if (prevKey && prevKey === toKey(curr)) {\r\n      accumulator.push(child);\r\n    }\r\n    return accumulator;\r\n  }, []);\r\n}\r\n\r\nexport function onChildChanged(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  const childKey = toKey(child);\r\n  return arr.reduce((accumulator:any[], val:any, i:number) => {\r\n    const valKey = toKey(val);\r\n    if (!prevKey && i==0) {\r\n      accumulator.push(child);\r\n      if (valKey !== childKey) {\r\n        accumulator.push(val);\r\n      }\r\n    } else if(valKey === prevKey) {\r\n      accumulator.push(val);\r\n      accumulator.push(child);\r\n    } else if (valKey !== childKey) {\r\n      accumulator.push(val);\r\n    }\r\n    return accumulator;\r\n  }, []);\r\n}\r\n\r\nexport function onChildRemoved(arr:any[], child:any, toKey:(element:any)=>string): any[] {\r\n  let childKey = toKey(child);\r\n  return arr.filter(c => toKey(c) !== childKey);\r\n}\r\n\r\nexport function onChildUpdated(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\r\n  return arr.map((v, i, arr) => {\r\n    if(!prevKey && !i) {\r\n      return child;\r\n    } else if (i > 0 && toKey(arr[i-1]) === prevKey) {\r\n      return child;\r\n    } else {\r\n      return v;\r\n    }\r\n  });\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}