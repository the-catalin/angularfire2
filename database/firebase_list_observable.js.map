{"version":3,"file":"firebase_list_observable.js","sourceRoot":"","sources":["../../src/database/firebase_list_observable.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { Operator } from 'rxjs/Operator';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport * as firebase from 'firebase';\r\nimport * as utils from '../utils';\r\nimport {\r\n  AFUnwrappedDataSnapshot,\r\n  FirebaseOperationCases\r\n} from '../interfaces';\r\n\r\nexport type FirebaseOperation = string | firebase.database.Reference | firebase.database.DataSnapshot | AFUnwrappedDataSnapshot;\r\n\r\nexport class FirebaseListObservable<T> extends Observable<T> {\r\n  constructor(public $ref: firebase.database.Reference | firebase.database.Query, subscribe?: <R>(subscriber: Subscriber<R>) => Subscription | Function | void) {\r\n    super(subscribe);\r\n  }\r\n  lift<T, R>(operator: Operator<T, R>): Observable<R> {\r\n    const observable = new FirebaseListObservable<R>(this.$ref);\r\n    observable.source = this;\r\n    observable.operator = operator;\r\n    observable.$ref = this.$ref;\r\n    return observable;\r\n  }\r\n\r\n  push(val:any):firebase.database.ThenableReference {\r\n    if(!this.$ref) {\r\n      throw new Error('No ref specified for this Observable!');\r\n    }\r\n    return this.$ref.ref.push(val);\r\n  }\r\n\r\n  update(item: FirebaseOperation, value: Object): firebase.Promise<void> {\r\n    return this._checkOperationCases(item, {\r\n      stringCase: () => this.$ref.ref.child(<string>item).update(value),\r\n      firebaseCase: () => (<firebase.database.Reference>item).update(value),\r\n      snapshotCase: () => (<firebase.database.DataSnapshot>item).ref.update(value),\r\n      unwrappedSnapshotCase: () => this.$ref.ref.child((<AFUnwrappedDataSnapshot>item).$key).update(value)\r\n    });\r\n  }\r\n\r\n  remove(item?:FirebaseOperation): firebase.Promise<void> {\r\n    // TODO: remove override when typings are updated to include\r\n    // remove() returning a promise.\r\n    \r\n    // if no item parameter is provided, remove the whole list\r\n    if (!item) {\r\n      return this.$ref.ref.remove();\r\n    }\r\n    return this._checkOperationCases(item, {\r\n      stringCase: () => this.$ref.ref.child(<string>item).remove(),\r\n      firebaseCase: () => (<firebase.database.Reference>item).remove(),\r\n      snapshotCase: () => (<firebase.database.DataSnapshot>item).ref.remove(),\r\n      unwrappedSnapshotCase: () => this.$ref.ref.child((<AFUnwrappedDataSnapshot>item).$key).remove()\r\n    });\r\n  }\r\n\r\n  _checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases) : firebase.Promise<void> {\r\n    if (utils.isString(item)) {\r\n      return cases.stringCase();\r\n    } else if (utils.isFirebaseRef(item)) {\r\n      // Firebase ref\r\n      return cases.firebaseCase();\r\n    } else if (utils.isFirebaseDataSnapshot(item)) {\r\n      // Snapshot\r\n      return cases.snapshotCase();\r\n    } else if (utils.isAFUnwrappedSnapshot(item)) {\r\n      // Unwrapped snapshot\r\n      return cases.unwrappedSnapshotCase()\r\n    }\r\n    throw new Error(`Method requires a key, snapshot, reference, or unwrapped snapshot. Got: ${typeof item}`);\r\n  }\r\n\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}