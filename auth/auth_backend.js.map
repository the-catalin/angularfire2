{"version":3,"file":"auth_backend.js","sourceRoot":"","sources":["../../src/auth/auth_backend.ts"],"names":[],"mappings":"AAGA;IAAA;IAaA,CAAC;IAAD,kBAAC;AAAD,CAAC,AAbD,IAaC;AAED,WAAY,aAQX;AARD,WAAY,aAAa;IACvB,qDAAM,CAAA;IACN,uDAAO,CAAA;IACP,yDAAQ,CAAA;IACR,qDAAM,CAAA;IACN,yDAAQ,CAAA;IACR,2DAAS,CAAA;IACT,qDAAM,CAAA;AACR,CAAC,EARW,aAAa,KAAb,aAAa,QAQxB;AAAA,CAAC;AAEF,WAAY,WAOX;AAPD,WAAY,WAAW;IACrB,+CAAK,CAAA;IACL,qDAAQ,CAAA;IACR,uDAAS,CAAA;IACT,qDAAQ,CAAA;IACR,yDAAU,CAAA;IACV,2DAAW,CAAA;AACb,CAAC,EAPW,WAAW,KAAX,WAAW,QAOtB;AAAA,CAAC;AAoBF,oCAAoC,QAAuB,EAAE,YAAgC;IAC3F,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;QAAC,MAAM,CAAC,IAAI,CAAC;IAC3B,IAAI,UAAU,CAAC;IACT,sBAAG,CAAc;IACvB,IAAI,SAAS,GAAsB,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC3E,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACzB,UAAU,GAAG,WAAW,CAAC;QACzB,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC;QAC7C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QAEvF,UAAU,GAAG,QAAQ,CAAC;QACtB,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IACnD,CAAC;IAED,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACnB,KAAK,YAAY;YACf,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC;YAChC,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC;YAC1C,KAAK,CAAC;QACR,KAAK,aAAa;YAChB,SAAS,CAAC,OAAO,GAAG,YAAY,CAAC;YACjC,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC;YAC3C,KAAK,CAAC;QACR,KAAK,cAAc;YACjB,SAAS,CAAC,QAAQ,GAAG,YAAY,CAAC;YAClC,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;YAC5C,KAAK,CAAC;QACR,KAAK,YAAY;YACf,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC;YAChC,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC;YAC1C,KAAK,CAAC;QACR,KAAK,UAAU;YACb,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;YAC5C,KAAK,CAAC;QACR,KAAK,QAAQ;YACX,SAAS,CAAC,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC;YAC1C,KAAK,CAAC;QACR;YACE,MAAM,IAAI,KAAK,CAAC,wCAAsC,UAAY,CAAC,CAAC;IACxE,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAED,gCAAiC,UAAkB;IACjD,IAAI,gBAAgB,GAAG,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,EAAE,CAAC,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC","sourcesContent":["import * as firebase from 'firebase';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nexport abstract class AuthBackend {\r\n  abstract authWithCustomToken(token: string): Promise<FirebaseAuthState>;\r\n  abstract authAnonymously(options?: any): Promise<FirebaseAuthState>;\r\n  abstract authWithPassword(credentials: EmailPasswordCredentials): Promise<FirebaseAuthState>;\r\n  abstract authWithOAuthPopup(provider: AuthProviders, options?: any): Promise<firebase.auth.UserCredential>;\r\n  abstract authWithOAuthRedirect(provider: AuthProviders, options?: any): Promise<void>;\r\n  abstract authWithOAuthToken(credentialsObj: firebase.auth.AuthCredential, options?: any)\r\n    : Promise<FirebaseAuthState>;\r\n  abstract onAuth(): Observable<FirebaseAuthState>;\r\n  abstract getAuth(): FirebaseAuthState;\r\n  abstract unauth(): Promise<void>;\r\n  abstract createUser(credentials: EmailPasswordCredentials): Promise<FirebaseAuthState>;\r\n  abstract getRedirectResult(): Observable<firebase.auth.UserCredential>;\r\n}\r\n\r\nexport enum AuthProviders {\r\n  Github,\r\n  Twitter,\r\n  Facebook,\r\n  Google,\r\n  Password,\r\n  Anonymous,\r\n  Custom\r\n};\r\n\r\nexport enum AuthMethods {\r\n  Popup,\r\n  Redirect,\r\n  Anonymous,\r\n  Password,\r\n  OAuthToken,\r\n  CustomToken\r\n};\r\n\r\nexport interface AuthConfiguration {\r\n  method?: AuthMethods;\r\n  provider?: AuthProviders;\r\n  scope?: string[];\r\n}\r\n\r\nexport interface FirebaseAuthState {\r\n  uid: string;\r\n  provider: AuthProviders;\r\n  auth: firebase.User;\r\n  expires?: number;\r\n  github?: firebase.UserInfo;\r\n  google?: firebase.UserInfo;\r\n  twitter?: firebase.UserInfo;\r\n  facebook?: firebase.UserInfo;\r\n  anonymous?: boolean;\r\n}\r\n\r\nexport function authDataToAuthState(authData: firebase.User, providerData?: firebase.UserInfo): FirebaseAuthState {\r\n  if (!authData) return null;\r\n  let providerId;\r\n  let { uid } = authData;\r\n  let authState: FirebaseAuthState = { auth: authData, uid, provider: null };\r\n  if (authData.isAnonymous) {\r\n    providerId = 'anonymous';\r\n    authState.provider = AuthProviders.Anonymous;\r\n    authState.anonymous = true;\r\n    return authState;\r\n  } else if (authData.providerData[0] === undefined || authData.providerData[0] === null) {\r\n    // There is no provider data, user is likely custom\r\n    providerId = 'custom';\r\n    authState.provider = AuthProviders.Custom;\r\n    return authState;\r\n  } else {\r\n    providerId = authData.providerData[0].providerId;\r\n  }\r\n\r\n  switch (providerId) {\r\n    case 'github.com':\r\n      authState.github = providerData;\r\n      authState.provider = AuthProviders.Github;\r\n      break;\r\n    case 'twitter.com':\r\n      authState.twitter = providerData;\r\n      authState.provider = AuthProviders.Twitter;\r\n      break;\r\n    case 'facebook.com':\r\n      authState.facebook = providerData;\r\n      authState.provider = AuthProviders.Facebook;\r\n      break;\r\n    case 'google.com':\r\n      authState.google = providerData;\r\n      authState.provider = AuthProviders.Google;\r\n      break;\r\n    case 'password':\r\n      authState.provider = AuthProviders.Password;\r\n      break;\r\n    case 'custom':\r\n      authState.provider = AuthProviders.Custom;\r\n      break;\r\n    default:\r\n      throw new Error(`Unsupported firebase auth provider ${providerId}`);\r\n  }\r\n\r\n  return authState;\r\n}\r\n\r\nexport function stripProviderId (providerId: string): string {\r\n  let providerStripped = /(.*)\\.com$/.exec(providerId);\r\n  if (providerStripped && providerStripped.length === 2) {\r\n    return providerStripped[1];\r\n  }\r\n  return null;\r\n}\r\n\r\nexport interface EmailPasswordCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}